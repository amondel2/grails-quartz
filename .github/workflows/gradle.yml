name: Java CI
on:
  push:
    branches:
      - '[3-9]+.[0-9]+.x'
  pull_request:
    branches:
      - '[3-9]+.[0-9]+.x'
env:
  GIT_USER_NAME: 'grails-build'
  GIT_USER_EMAIL: 'grails-build@users.noreply.github.com'

jobs:

  test_project:
    name: Test Project
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        java: [17]
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/wrapper-validation-action@v2
      - uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: ${{ matrix.java }}
      - uses: gradle/actions/setup-gradle@v3
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
        with:
          arguments: check

  publish_snapshot:
    name: Build Project and Publish Snapshot release
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4
      - uses: gradle/wrapper-validation-action@v2
      - uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: 17

      - name: Build Project
        uses: gradle/actions/setup-gradle@v3
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
        with:
          arguments: build

      - name: Publish Snapshot version to Artifactory (repo.grails.org)
        if: success()
        uses: gradle/actions/setup-gradle@v3
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          MAVEN_PUBLISH_USERNAME: ${{ secrets.MAVEN_PUBLISH_USERNAME }}
          MAVEN_PUBLISH_PASSWORD: ${{ secrets.MAVEN_PUBLISH_PASSWORD }}
          MAVEN_PUBLISH_URL: ${{ secrets.MAVEN_PUBLISH_SNAPSHOT_URL }}
        with:
          arguments: publish

      - name: Generate Snapshot Documentation
        if: success()
        uses: gradle/actions/setup-gradle@v3
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
        with:
          arguments: docs

      - name: Publish Snapshot Documentation to Github Pages
        if: success()
        uses: micronaut-projects/github-pages-deploy-action@grails
        env:
          BRANCH: gh-pages
          COMMIT_EMAIL: ${{ env.GIT_USER_EMAIL }}
          COMMIT_NAME: ${{ env.GIT_USER_NAME }}
          FOLDER: build/docs/manual
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
